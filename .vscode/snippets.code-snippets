{
	// Place your KDSMovil workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "consologuear",
		"body": [
			"console.log('################## ${1:Película de Star Wars}');",
			"console.log(${2:var});",
			"$3"
		],
		"description": "Log output to console"
	},
	"Formatear número": {
		"scope": "javascript",
		"prefix": "numformat",
		"body": ["<NumberFormat value={parseFloat( ${1:VALOR} )} displayType={'text'} renderText={value => <Text style={ ${2:ESTILO} }> {value} </Text>} thousandSeparator={true} prefix={'$'}></NumberFormat>"],
		"description": "Da formato a números"
	},
	"Importación": {
		"scope": "javascript",
		"prefix": "importar",
		"body": ["import { ${1:ESTO} } from '${2:LO_OTRO}';"],
		"description": "String para importar esto de lo otro"
	},
	"I18n": {
		"scope": "javascript",
		"prefix": "i18n",
		"body": ["strings('modules.${1:BLA}.${2:BLABLA}.${3:BLABLABLA}')"],
		"description": "String para insertar texto en varios idiomas"
	},
	"Text": {
		"scope": "javascript",
		"prefix": "text",
		"body": "<Text style={${1:estilos}.${2:contenido}}>${3:blablabla}</Text>",
		"description": "Texto con el estilo default"
	},
	"Escena": {
		"scope": "javascript",
		"prefix": "escena",
		"body": [
			"import React from 'react';",
			"import {",
			"  ScrollView,",
			"  View,",
			"  Text",
			"} from 'react-native';",
			"import axios from 'axios';",
			"import { Actions } from 'react-native-router-flux';",
			"import { strings } from '../../i18n';",
			"import LoadingScreen from '../Common/LoadingScreen';",
			"import light from '../Common/mode';",
			"import dark from '../Common/DarkMode';",
			"",
			"export default class ${1:Nombre de la Escena} extends React.Component {",
			"  constructor(props) {",
			"    super(props);",
			"    this.state = {",
			"    parametros: {",
			"      'TOKEN_P': global.token",
			"    },",
			"//       loading: true,",
			"//       data: [],",
			"    };",
			"  }",
			"  componentDidMount() {",
			"    this.titleInterval = setInterval(() => this.updateTitle(),1);",
			"//     const keys = this.state.parametros; ",
			"//     axios.post(' ', keys",
			"//      ).then(response => {",
			"//        if (response.data.SUCCESS){",
			"//         this.setState({",
			"//           data: response.data,",
			"//           loading: false",
			"//          });",
			"//        } else {",
			"//          Alert.alert(",
			"//            strings('common.session.alert_title'),",
			"//            strings('common.session.alert_content'),",
			"//            [",
			"//              { text: strings('common.session.alert_ok'), onPress: () => Actions.auth() }",
			"//            ],",
			"//            { cancelable: false }",
			"//          );",
			"//          Actions.auth();",
			"//        }",
			"//      })",
			"//      .catch(error =>  console.log(error));",
			"  }",
			"  updateTitle() {",
			"    Actions.refresh({title: strings('modules.BandejaDeAutorizaciones.AutorizacionOC.title')});",
			"    clearInterval(this.titleInterval);",
			"  }",
			"  estilo(){",
			"    switch (global.style){",
			"    case 'light':",
			"      return(light);",
			"    case 'dark':",
			"      return(dark);",
			"    default:",
			"      return(light);",
			"    }",
			"  }",
			"  render() { ",
			"    let estilos = this.estilo()",
			"    const loading = this.state.loading;",
			"    const datos = this.state.data;",
			"    if (loading != true) {",
			"    return (   ",
			"      <View style={estilos.container}>",
			"        <ScrollView style={estilos.ScrollContainer}>",
			"          <View> ",
			"          </View>",
			"        </ScrollView>",
			"      </View>",
			"    );",
			"    } else {",
			"    return (  ", 
			"      <LoadingScreen />",
			"    );",
			"    } ",
			"  }",
			"}",
		],
		"description": "Plantilla de escena genérica"
	}
}